swagger: '2.0'
info:
  version: 1.0.0
  title: TopCoder Autopilot Schedule API v5
  description: >
    ## Pagination

    - Requests that return multiple items will be paginated to 20 items by default.

    - You can specify further pages with the `page` parameter (1 based).

    - You can also set a custom page size up to 100 with the `perPage` parameter.

    - Pagination response data is included in http headers.

    - By default, the response header contains links with `next`, `last`, `first`, `prev` resource links.

host: api.topcoder.com
basePath: /v5
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
produces:
  - application/json
consumes:
  - application/json
paths:
  '/scheduledTasks':
    get:
      tags:
        - ScheduledTask
      description: |
        List scheduled tasks.
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - $ref: '#/parameters/status'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ScheduledTask'
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    head:
      tags:
        - ScheduledTask
      description: |
        List scheduled tasks, only response headers.
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - $ref: '#/parameters/status'
      responses:
        '200':
          description: OK
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - ScheduledTask
      description: |
        Create a new scheduled task.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduledTaskData'
      responses:
        '201':
          description: Created - The request was successful and the resource is returned.
          schema:
            $ref: '#/definitions/ScheduledTask'
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/scheduledTasks/:id':
    get:
      tags:
        - ScheduledTask
      description: Retrieve the scheduled task by id
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ScheduledTask'
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Scheduled task not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    head:
      tags:
        - ScheduledTask
      description: Retrieve the scheduled task by id, only response headers
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Scheduled task not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
        - ScheduledTask
      description: Update the scheduled task with the specified id.
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduledTaskData'
      responses:
        '200':
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: '#/definitions/ScheduledTask'
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Scheduled task not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    patch:
      tags:
        - ScheduledTask
      description: >
        Partially update the scheduled task with specified id.  Only the fields
        that are provided will be updated.
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduledTaskPatchData'
      responses:
        '200':
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: '#/definitions/ScheduledTask'
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Scheduled task not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
        - ScheduledTask
      description: Delete scheduled task.
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '204':
          description: Deleted successful.
        '400':
          description: Bad request.  Request parameters were invalid.
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: '#/definitions/ErrorModel'
        '403':
          description: >
            Forbidden.  The requester does not have the correct permission to perform the operation.
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Scheduled task not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ErrorModel'

parameters:
  id:
    name: id
    in: path
    required: true
    type: string
    format: uuid
    description: The scheduled task id
  page:
    name: page
    in: query
    description: The page number.
    required: false
    type: integer
    default: 1
  perPage:
    name: perPage
    in: query
    description: The number of items to list per page.
    required: false
    type: integer
    default: 20
    maximum: 100
  status:
    name: status
    in: query
    description: Filter by status
    type: string
    enum: [ready, running, failed, completed, rescheduled, disabled]
definitions:
  ScheduledTaskPatchData:
    type: object
    properties:
      scheduledTime:
        type: string
        format: date-time
        description: the time at which the task needs to be executed
      endpoint:
        type: string
        description: the endpoint url that needs to be called at the scheduled time
      methodType:
        type: string
        enum: [CONNECT, DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT, TRACE]
        description: the HTTP verb to use when calling the endpoint
      headers:
        type: object
        example:
          Content-Type: application/json,
          Accept: application/json
        description: the HTTP request headers
      payload:
        type: object
        description: the HTTP request payload, a json object
      status:
        type: string
        enum: [ready, running, failed, completed, rescheduled, disabled]
        description: the task status
  ScheduledTaskData:
    allOf:
      - $ref: '#/definitions/ScheduledTaskPatchData'
      - type: object
        properties:
          status:
            type: string
            enum: [ready, running, failed, completed, rescheduled, disabled]
            default: ready
            description: the task status
    required:
      - scheduledTime
      - endpoint
      - methodType
  ScheduledTask:
    allOf:
      - $ref: '#/definitions/ScheduledTaskData'
      - type: object
        properties:
          id:
            type: string
            format: uuid
            description: the scheduled task id
          createdBy:
            type: string
            example: "topcoder user"
            description: the user who created this ScheduledTask entity
          createdAt:
            type: string
            format: date-time
            description: the datetime when this ScheduledTask is created
          updatedBy:
            type: string
            example: "topcoder user"
            description: the user who updated this ScheduledTask entity
          updatedAt:
            type: string
            format: date-time
            description: the datetime when this ScheduledTask is updated
        required:
          - id
          - createdBy
          - createdAt
  ErrorModel:
    type: object
    properties:
      message:
        type: string
        description: the error message
